# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# cdarlint <cdarling@126.com>, 2021
# Menghua Xiao <arieshout@gmail.com>, 2021
# ailin zhang <zhangailin@gmail.com>, 2021
# jaystone776 <1732865113@qq.com>, 2021
# Leo Li <foxleoly@hotmail.com>, 2021
# oneTaken <pengxiaoping1993@gmail.com>, 2021
# Freesand Leo <yuqinju@163.com>, 2021
# ppcfish <ppcfish@gmail.com>, 2021
# 钢 彭 <szhairui@gmail.com>, 2021
# Alex Ding <dxtfz@foxmail.com>, 2021
# Alpha Du <alphanow@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-12 13:42+0000\n"
"PO-Revision-Date: 2021-06-28 01:15+0000\n"
"Last-Translator: Alpha Du <alphanow@gmail.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tkinter.rst:2
msgid ":mod:`tkinter` --- Python interface to Tcl/Tk"
msgstr ":mod:`tkinter` --- Tcl/Tk的Python接口"

#: ../../library/tkinter.rst:9
msgid "**Source code:** :source:`Lib/tkinter/__init__.py`"
msgstr "**源代码:** :source:`Lib/tkinter/__init__.py`"

#: ../../library/tkinter.rst:13
msgid ""
"The :mod:`tkinter` package (\"Tk interface\") is the standard Python "
"interface to the Tk GUI toolkit.  Both Tk and :mod:`tkinter` are available "
"on most Unix platforms, as well as on Windows systems.  (Tk itself is not "
"part of Python; it is maintained at ActiveState.)"
msgstr ""
" :mod:`tkinter` 包（“Tk interface”）是 Python 使用 Tk GUI 工具包的标准接口。Tk 和 "
":mod:`tkinter` 在大多数 Unix 平台和 Windows 系统上可用。（Tk 本身不是 Python 的一部分；它现在由 "
"ActiveState 维护。）"

#: ../../library/tkinter.rst:18
msgid ""
"Running ``python -m tkinter`` from the command line should open a window "
"demonstrating a simple Tk interface, letting you know that :mod:`tkinter` is"
" properly installed on your system, and also showing what version of Tcl/Tk "
"is installed, so you can read the Tcl/Tk documentation specific to that "
"version."
msgstr ""
"在命令行中运行 ``python -m tkinter``，应该会弹出一个Tk界面的窗口，表明 :mod:`tkinter` 包已经正确安装，而且告诉你"
" Tcl/Tk 的版本号，通过这个版本号，你就可以参考对应的 Tcl/Tk 文档了。"

#: ../../library/tkinter.rst:23
msgid ""
"Tkinter supports a range of Tcl/Tk versions, built either with or without "
"thread support. The official Python binary release bundles Tcl/Tk 8.6 "
"threaded. See the source code for the :mod:`_tkinter` module for more "
"information about supported versions."
msgstr ""
"Tkinter 支持一系列的 Tcl/Tk 版本，可以在有或没有线程支持的情况下构建。官方的 Python 二进制版本捆绑了 Tcl/Tk 8.6 "
"线程。关于支持的版本，请参见 :mod:`_tkinter` 模块的源代码。"

#: ../../library/tkinter.rst:28
msgid ""
"Tkinter is not a thin wrapper, but adds a fair amount of its own logic to "
"make the experience more pythonic. This documentation will concentrate on "
"these additions and changes, and refer to the official Tcl/Tk documentation "
"for details that are unchanged."
msgstr ""
"Tkinter并不是一个薄薄的包装，而是增加了相当多的自己的逻辑，使体验更加 pythonic "
"。本文档将集中介绍这些增加和变化，对于没有变化的细节，请参考官方的 Tcl/Tk 文档。"

#: ../../library/tkinter.rst:35
msgid "Tkinter documentation:"
msgstr "Tkinter文档："

#: ../../library/tkinter.rst:39
msgid "`Python Tkinter Resources <https://wiki.python.org/moin/TkInter>`_"
msgstr "`Python Tkinter 资源 <https://wiki.python.org/moin/TkInter>`_"

#: ../../library/tkinter.rst:38
msgid ""
"The Python Tkinter Topic Guide provides a great deal of information on using"
" Tk from Python and links to other sources of information on Tk."
msgstr ""
"The Python Tkinter Topic Guide 提供了在 Python 中使用 Tk 的很多信息， 同时包含了Tk其他信息的链接。"

#: ../../library/tkinter.rst:42
msgid "`TKDocs <http://www.tkdocs.com/>`_"
msgstr "`TKDocs <http://www.tkdocs.com/>`_"

#: ../../library/tkinter.rst:42
msgid ""
"Extensive tutorial plus friendlier widget pages for some of the widgets."
msgstr "大量的教程，部分可视化组件的介绍说明。"

#: ../../library/tkinter.rst:45
msgid ""
"`Tkinter 8.5 reference: a GUI for Python <https://www.tkdocs.com/shipman/>`_"
msgstr "`Tkinter 8.5 参考：一个Python图形用户界面 <https://www.tkdocs.com/shipman/>`_"

#: ../../library/tkinter.rst:45
msgid "On-line reference material."
msgstr "在线参考资料。"

#: ../../library/tkinter.rst:48
msgid "`Tkinter docs from effbot <http://effbot.org/tkinterbook/>`_"
msgstr "`Tkinter docs from effbot <http://effbot.org/tkinterbook/>`_"

#: ../../library/tkinter.rst:48
msgid "Online reference for tkinter supported by effbot.org."
msgstr "effbot.org 提供的 tkinter 在线参考资料。"

#: ../../library/tkinter.rst:51
msgid "`Programming Python <http://learning-python.com/about-pp4e.html>`_"
msgstr "`使用 Python 编程 <http://learning-python.com/about-pp4e.html>`_"

#: ../../library/tkinter.rst:51
msgid "Book by Mark Lutz, has excellent coverage of Tkinter."
msgstr "由 Mark Lutz 所著的书籍，对 Tkinter 进行了完美的介绍。"

#: ../../library/tkinter.rst:54
msgid ""
"`Modern Tkinter for Busy Python Developers <https://www.amazon.com/Modern-"
"Tkinter-Python-Developers-ebook/dp/B0071QDNLO/>`_"
msgstr ""
"`为繁忙的 Python 开发者所准备的现代 Tkinter <https://www.amazon.com/Modern-Tkinter-"
"Python-Developers-ebook/dp/B0071QDNLO/>`_"

#: ../../library/tkinter.rst:54
msgid ""
"Book by Mark Roseman about building attractive and modern graphical user "
"interfaces with Python and Tkinter."
msgstr "由 Mark Rozerman 所著的关于如何使用 Python 和 Tkinter 来搭建有吸引力的和现代化的图形用户界面的书籍"

#: ../../library/tkinter.rst:57
msgid ""
"`Python and Tkinter Programming <https://www.manning.com/books/python-and-"
"tkinter-programming>`_"
msgstr ""
"`Python 和 Tkinter 编程 <https://www.manning.com/books/python-and-tkinter-"
"programming>`_"

#: ../../library/tkinter.rst:57
msgid "Book by John Grayson (ISBN 1-884777-81-3)."
msgstr "作者： John Grayson (ISBN 1-884777-81-3)."

#: ../../library/tkinter.rst:59
msgid "Tcl/Tk documentation:"
msgstr "Tcl/Tk 文档:"

#: ../../library/tkinter.rst:63
msgid "`Tk commands <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"
msgstr "`Tk 命令 <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"

#: ../../library/tkinter.rst:62
msgid ""
"Most commands are available as :mod:`tkinter` or :mod:`tkinter.ttk` classes."
" Change '8.6' to match the version of your Tcl/Tk installation."
msgstr ""
"多数命令以 :mod:`tkinter` 或者 :mod:`tkinter.ttk` 类的形式存在。改变 '8.6' 以匹配所安装的 Tcl/Tk "
"版本。"

#: ../../library/tkinter.rst:66
msgid "`Tcl/Tk recent man pages <https://www.tcl.tk/doc/>`_"
msgstr "`Tcl/Tk 最新手册页面 <https://www.tcl.tk/doc/>`_"

#: ../../library/tkinter.rst:66
msgid "Recent Tcl/Tk manuals on www.tcl.tk."
msgstr "www.tcl.tk 上面最新的 Tcl/Tk 手册。"

#: ../../library/tkinter.rst:69
msgid "`ActiveState Tcl Home Page <https://tcl.tk>`_"
msgstr "`ActiveState Tcl 主页 <https://tcl.tk>`_"

#: ../../library/tkinter.rst:69
msgid "The Tk/Tcl development is largely taking place at ActiveState."
msgstr "Tk/Tcl 的多数开发工作发生在 ActiveState 。"

#: ../../library/tkinter.rst:72
msgid ""
"`Tcl and the Tk Toolkit "
"<https://www.amazon.com/exec/obidos/ASIN/020163337X>`_"
msgstr "`Tcl 及 Tk 工具集 <https://www.amazon.com/exec/obidos/ASIN/020163337X>`_"

#: ../../library/tkinter.rst:72
msgid "Book by John Ousterhout, the inventor of Tcl."
msgstr "由 Tcl 发明者 John Ousterhout 所著的书籍。"

#: ../../library/tkinter.rst:74
msgid "`Practical Programming in Tcl and Tk <http://www.beedub.com/book/>`_"
msgstr "` Tcl 和 Tk 编程实战 <http://www.beedub.com/book/>`_"

#: ../../library/tkinter.rst:75
msgid "Brent Welch's encyclopedic book."
msgstr "Brent Welch 所著的百科全局式书籍。"

#: ../../library/tkinter.rst:79
msgid "Architecture"
msgstr ""

#: ../../library/tkinter.rst:81
msgid ""
"Tcl/Tk is not a single library but rather consists of a few distinct "
"modules, each with a separate functionality and its own official "
"documentation. Python's binary releases also ship an add-on module together "
"with it."
msgstr ""

#: ../../library/tkinter.rst:97
msgid "Tcl"
msgstr ""

#: ../../library/tkinter.rst:87
msgid ""
"Tcl is a dynamic interpreted programming language, just like Python. Though "
"it can be used on its own as a general-purpose programming language, it is "
"most commonly embedded into C applications as a scripting engine or an "
"interface to the Tk toolkit. The Tcl library has a C interface to create and"
" manage one or more instances of a Tcl interpreter, run Tcl commands and "
"scripts in those instances, and add custom commands implemented in either "
"Tcl or C. Each interpreter has an event queue, and there are facilities to "
"send events to it and process them. Unlike Python, Tcl's execution model is "
"designed around cooperative multitasking, and Tkinter bridges this "
"difference (see `Threading model`_ for details)."
msgstr ""

#: ../../library/tkinter.rst:104 ../../library/tkinter.rst:838
#: ../../library/tkinter.rst:838
msgid "Tk"
msgstr "Tk"

#: ../../library/tkinter.rst:100
msgid ""
"Tk is a `Tcl package <http://wiki.tcl.tk/37432>`_ implemented in C that adds"
" custom commands to create and manipulate GUI widgets. Each :class:`Tk` "
"object embeds its own Tcl interpreter instance with Tk loaded into it. Tk's "
"widgets are very customizable, though at the cost of a dated appearance. Tk "
"uses Tcl's event queue to generate and process GUI events."
msgstr ""

#: ../../library/tkinter.rst:110
msgid "Ttk"
msgstr ""

#: ../../library/tkinter.rst:107
msgid ""
"Themed Tk (Ttk) is a newer family of Tk widgets that provide a much better "
"appearance on different platforms than many of the classic Tk widgets. Ttk "
"is distributed as part of Tk, starting with Tk version 8.5. Python bindings "
"are provided in a separate module, :mod:`tkinter.ttk`."
msgstr ""

#: ../../library/tkinter.rst:117
msgid "Tix"
msgstr ""

#: ../../library/tkinter.rst:113
msgid ""
"`Tix <https://core.tcl.tk/jenglish/gutter/packages/tix.html>`_ is an older "
"third-party Tcl package, an add-on for Tk that adds several new widgets. "
"Python bindings are found in the :mod:`tkinter.tix` module. It's deprecated "
"in favor of Ttk."
msgstr ""

#: ../../library/tkinter.rst:120
msgid "Tkinter Modules"
msgstr "Tkinter 模块"

#: ../../library/tkinter.rst:122
msgid ""
"Most of the time, :mod:`tkinter` is all you really need, but a number of "
"additional modules are available as well.  The Tk interface is located in a "
"binary module named :mod:`_tkinter`. This module contains the low-level "
"interface to Tk, and should never be used directly by application "
"programmers. It is usually a shared library (or DLL), but might in some "
"cases be statically linked with the Python interpreter."
msgstr ""
"在大多数时候你只需要 :mod:`tkinter` 就足够了，但也有一些额外的模块可供使用。Tk 接口位于一个名字 :mod:`_tkinter` "
"的二进制模块当中。此模块包含了低层级的 Tk 接口，它不应该被应用程序员所直接使用。它通常是一个共享库（或 DLL），但在某些情况下也可能被静态链接到 "
"Python 解释器。"

#: ../../library/tkinter.rst:129
msgid ""
"In addition to the Tk interface module, :mod:`tkinter` includes a number of "
"Python modules, :mod:`tkinter.constants` being one of the most important. "
"Importing :mod:`tkinter` will automatically import :mod:`tkinter.constants`,"
" so, usually, to use Tkinter all you need is a simple import statement::"
msgstr ""
"除了Tk接口， :mod:`tkinter` 也包含了若干 Python 模块，:mod:`tkinter.constants` 是其中最重要的。导入 "
":mod:`tkinter` 会自动导入 :mod:`tkinter.constants` ，所以，要使用 Tkinter 通常你只需要一条简单的 "
"import 语句::"

#: ../../library/tkinter.rst:136
msgid "Or, more often::"
msgstr "或者更常用的::"

#: ../../library/tkinter.rst:143
msgid ""
"The :class:`Tk` class is instantiated without arguments. This creates a "
"toplevel widget of Tk which usually is the main window of an application. "
"Each instance has its own associated Tcl interpreter."
msgstr ""
":class:`Tk` 类被初始化时无参数。此时会创建一个 Tk 顶级控件，通常是应用程序的主窗口。每个实例都有自己关联的 Tcl 解释器。"

#: ../../library/tkinter.rst:152
msgid ""
"The :func:`Tcl` function is a factory function which creates an object much "
"like that created by the :class:`Tk` class, except that it does not "
"initialize the Tk subsystem.  This is most often useful when driving the Tcl"
" interpreter in an environment where one doesn't want to create extraneous "
"toplevel windows, or where one cannot (such as Unix/Linux systems without an"
" X server).  An object created by the :func:`Tcl` object can have a Toplevel"
" window created (and the Tk subsystem initialized) by calling its "
":meth:`loadtk` method."
msgstr ""
":func:`Tcl` 函数是一个工厂函数，它创建的对象与 :class:`Tk` 类创建的对象非常相似，只是它不初始化 Tk 子系统。 "
"在不想创建或无法创建（如没有 X Server 的 Unix/Linux 系统）额外的顶层窗口的环境中驱动 Tcl 解释器时，这一点非常有用。 由 "
":func:`Tcl` 对象创建的对象可以通过调用其 :meth:`loadtk` 方法来创建顶层窗口（并初始化 Tk 子系统）。"

#: ../../library/tkinter.rst:161
msgid "Other modules that provide Tk support include:"
msgstr "提供Tk支持的其他模块包括："

#: ../../library/tkinter.rst:164
msgid ":mod:`tkinter.colorchooser`"
msgstr ":mod:`tkinter.colorchooser`"

#: ../../library/tkinter.rst:164
msgid "Dialog to let the user choose a color."
msgstr "让用户选择颜色的对话框。"

#: ../../library/tkinter.rst:167
msgid ":mod:`tkinter.commondialog`"
msgstr ":mod:`tkinter.commondialog`"

#: ../../library/tkinter.rst:167
msgid "Base class for the dialogs defined in the other modules listed here."
msgstr "在此处列出的其他模块中定义的对话框的基类。"

#: ../../library/tkinter.rst:170
msgid ":mod:`tkinter.filedialog`"
msgstr ":mod:`tkinter.filedialog`"

#: ../../library/tkinter.rst:170
msgid "Common dialogs to allow the user to specify a file to open or save."
msgstr ""

#: ../../library/tkinter.rst:173
msgid ":mod:`tkinter.font`"
msgstr ":mod:`tkinter.font`"

#: ../../library/tkinter.rst:173
msgid "Utilities to help work with fonts."
msgstr ""

#: ../../library/tkinter.rst:176
msgid ":mod:`tkinter.messagebox`"
msgstr ":mod:`tkinter.messagebox`"

#: ../../library/tkinter.rst:176
msgid "Access to standard Tk dialog boxes."
msgstr ""

#: ../../library/tkinter.rst:179
msgid ":mod:`tkinter.scrolledtext`"
msgstr ":mod:`tkinter.scrolledtext`"

#: ../../library/tkinter.rst:179
msgid "Text widget with a vertical scroll bar built in."
msgstr ""

#: ../../library/tkinter.rst:182
msgid ":mod:`tkinter.simpledialog`"
msgstr ":mod:`tkinter.simpledialog`"

#: ../../library/tkinter.rst:182
msgid "Basic dialogs and convenience functions."
msgstr ""

#: ../../library/tkinter.rst:186
msgid ":mod:`tkinter.dnd`"
msgstr ":mod:`tkinter.dnd`"

#: ../../library/tkinter.rst:185
msgid ""
"Drag-and-drop support for :mod:`tkinter`. This is experimental and should "
"become deprecated when it is replaced  with the Tk DND."
msgstr ""

#: ../../library/tkinter.rst:190
msgid ":mod:`turtle`"
msgstr ":mod:`turtle`"

#: ../../library/tkinter.rst:189
msgid "Turtle graphics in a Tk window."
msgstr ""

#: ../../library/tkinter.rst:193
msgid "Tkinter Life Preserver"
msgstr ""

#: ../../library/tkinter.rst:198
msgid ""
"This section is not designed to be an exhaustive tutorial on either Tk or "
"Tkinter.  Rather, it is intended as a stop gap, providing some introductory "
"orientation on the system."
msgstr ""

#: ../../library/tkinter.rst:202
msgid "Credits:"
msgstr ""

#: ../../library/tkinter.rst:204
msgid "Tk was written by John Ousterhout while at Berkeley."
msgstr ""

#: ../../library/tkinter.rst:206
msgid "Tkinter was written by Steen Lumholt and Guido van Rossum."
msgstr ""

#: ../../library/tkinter.rst:208
msgid ""
"This Life Preserver was written by Matt Conway at the University of "
"Virginia."
msgstr ""

#: ../../library/tkinter.rst:210
msgid ""
"The HTML rendering, and some liberal editing, was produced from a FrameMaker"
" version by Ken Manheimer."
msgstr ""

#: ../../library/tkinter.rst:213
msgid ""
"Fredrik Lundh elaborated and revised the class interface descriptions, to "
"get them current with Tk 4.2."
msgstr ""

#: ../../library/tkinter.rst:216
msgid ""
"Mike Clarkson converted the documentation to LaTeX, and compiled the  User "
"Interface chapter of the reference manual."
msgstr ""

#: ../../library/tkinter.rst:221
msgid "How To Use This Section"
msgstr ""

#: ../../library/tkinter.rst:223
msgid ""
"This section is designed in two parts: the first half (roughly) covers "
"background material, while the second half can be taken to the keyboard as a"
" handy reference."
msgstr ""

#: ../../library/tkinter.rst:227
msgid ""
"When trying to answer questions of the form \"how do I do blah\", it is "
"often best to find out how to do \"blah\" in straight Tk, and then convert "
"this back into the corresponding :mod:`tkinter` call. Python programmers can"
" often guess at the correct Python command by looking at the Tk "
"documentation. This means that in order to use Tkinter, you will have to "
"know a little bit about Tk. This document can't fulfill that role, so the "
"best we can do is point you to the best documentation that exists. Here are "
"some hints:"
msgstr ""

#: ../../library/tkinter.rst:235
msgid ""
"The authors strongly suggest getting a copy of the Tk man pages. "
"Specifically, the man pages in the ``manN`` directory are most useful. The "
"``man3`` man pages describe the C interface to the Tk library and thus are "
"not especially helpful for script writers."
msgstr ""

#: ../../library/tkinter.rst:240
msgid ""
"Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John "
"Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk "
"for the novice.  The book is not exhaustive, and for many details it defers "
"to the man pages."
msgstr ""

#: ../../library/tkinter.rst:245
msgid ""
":file:`tkinter/__init__.py` is a last resort for most, but can be a good "
"place to go when nothing else makes sense."
msgstr ""

#: ../../library/tkinter.rst:250
msgid "A Simple Hello World Program"
msgstr ""

#: ../../library/tkinter.rst:282
msgid "A (Very) Quick Look at Tcl/Tk"
msgstr ""

#: ../../library/tkinter.rst:284
msgid ""
"The class hierarchy looks complicated, but in actual practice, application "
"programmers almost always refer to the classes at the very bottom of the "
"hierarchy."
msgstr ""

#: ../../library/tkinter.rst:288
msgid "Notes:"
msgstr "注释："

#: ../../library/tkinter.rst:290
msgid ""
"These classes are provided for the purposes of organizing certain functions "
"under one namespace. They aren't meant to be instantiated independently."
msgstr ""

#: ../../library/tkinter.rst:293
msgid ""
"The :class:`Tk` class is meant to be instantiated only once in an "
"application. Application programmers need not instantiate one explicitly, "
"the system creates one whenever any of the other classes are instantiated."
msgstr ""

#: ../../library/tkinter.rst:297
msgid ""
"The :class:`Widget` class is not meant to be instantiated, it is meant only "
"for subclassing to make \"real\" widgets (in C++, this is called an "
"'abstract class')."
msgstr ""

#: ../../library/tkinter.rst:301
msgid ""
"To make use of this reference material, there will be times when you will "
"need to know how to read short passages of Tk and how to identify the "
"various parts of a Tk command.   (See section :ref:`tkinter-basic-mapping` "
"for the :mod:`tkinter` equivalents of what's below.)"
msgstr ""

#: ../../library/tkinter.rst:306
msgid ""
"Tk scripts are Tcl programs.  Like all Tcl programs, Tk scripts are just "
"lists of tokens separated by spaces.  A Tk widget is just its *class*, the "
"*options* that help configure it, and the *actions* that make it do useful "
"things."
msgstr ""

#: ../../library/tkinter.rst:310
msgid "To make a widget in Tk, the command is always of the form::"
msgstr ""

#: ../../library/tkinter.rst:315
msgid "*classCommand*"
msgstr ""

#: ../../library/tkinter.rst:315
msgid "denotes which kind of widget to make (a button, a label, a menu...)"
msgstr ""

#: ../../library/tkinter.rst:324
msgid "*newPathname*"
msgstr ""

#: ../../library/tkinter.rst:320
msgid ""
"is the new name for this widget.  All names in Tk must be unique.  To help "
"enforce this, widgets in Tk are named with *pathnames*, just like files in a"
" file system.  The top level widget, the *root*, is called ``.`` (period) "
"and children are delimited by more periods.  For example, "
"``.myApp.controlPanel.okButton`` might be the name of a widget."
msgstr ""

#: ../../library/tkinter.rst:330
msgid "*options*"
msgstr "*options*"

#: ../../library/tkinter.rst:327
msgid ""
"configure the widget's appearance and in some cases, its behavior.  The "
"options come in the form of a list of flags and values. Flags are preceded "
"by a '-', like Unix shell command flags, and values are put in quotes if "
"they are more than one word."
msgstr ""

#: ../../library/tkinter.rst:332 ../../library/tkinter.rst:646
#: ../../library/tkinter.rst:825
msgid "For example::"
msgstr "例如："

#: ../../library/tkinter.rst:340
msgid ""
"Once created, the pathname to the widget becomes a new command.  This new "
"*widget command* is the programmer's handle for getting the new widget to "
"perform some *action*.  In C, you'd express this as someAction(fred, "
"someOptions), in C++, you would express this as "
"fred.someAction(someOptions), and in Tk, you say::"
msgstr ""

#: ../../library/tkinter.rst:348
msgid "Note that the object name, ``.fred``, starts with a dot."
msgstr ""

#: ../../library/tkinter.rst:350
msgid ""
"As you'd expect, the legal values for *someAction* will depend on the "
"widget's class: ``.fred disable`` works if fred is a button (fred gets "
"greyed out), but does not work if fred is a label (disabling of labels is "
"not supported in Tk)."
msgstr ""

#: ../../library/tkinter.rst:354
msgid ""
"The legal values of *someOptions* is action dependent.  Some actions, like "
"``disable``, require no arguments, others, like a text-entry box's "
"``delete`` command, would need arguments to specify what range of text to "
"delete."
msgstr ""

#: ../../library/tkinter.rst:362
msgid "Mapping Basic Tk into Tkinter"
msgstr ""

#: ../../library/tkinter.rst:364
msgid "Class commands in Tk correspond to class constructors in Tkinter. ::"
msgstr ""

#: ../../library/tkinter.rst:368
msgid ""
"The master of an object is implicit in the new name given to it at creation "
"time.  In Tkinter, masters are specified explicitly. ::"
msgstr ""

#: ../../library/tkinter.rst:373
msgid ""
"The configuration options in Tk are given in lists of hyphened tags followed"
" by values.  In Tkinter, options are specified as keyword-arguments in the "
"instance constructor, and keyword-args for configure calls or as instance "
"indices, in dictionary style, for established instances.  See section :ref"
":`tkinter-setting-options` on setting options. ::"
msgstr ""

#: ../../library/tkinter.rst:383
msgid ""
"In Tk, to perform an action on a widget, use the widget name as a command, "
"and follow it with an action name, possibly with arguments (options).  In "
"Tkinter, you call methods on the class instance to invoke actions on the "
"widget.  The actions (methods) that a given widget can perform are listed in"
" :file:`tkinter/__init__.py`. ::"
msgstr ""

#: ../../library/tkinter.rst:391
msgid ""
"To give a widget to the packer (geometry manager), you call pack with "
"optional arguments.  In Tkinter, the Pack class holds all this "
"functionality, and the various forms of the pack command are implemented as "
"methods.  All widgets in :mod:`tkinter` are subclassed from the Packer, and "
"so inherit all the packing methods. See the :mod:`tkinter.tix` module "
"documentation for additional information on the Form geometry manager. ::"
msgstr ""

#: ../../library/tkinter.rst:402
msgid "How Tk and Tkinter are Related"
msgstr ""

#: ../../library/tkinter.rst:404
msgid "From the top down:"
msgstr ""

#: ../../library/tkinter.rst:407
msgid "Your App Here (Python)"
msgstr ""

#: ../../library/tkinter.rst:407
msgid "A Python application makes a :mod:`tkinter` call."
msgstr ""

#: ../../library/tkinter.rst:414
msgid "tkinter (Python Package)"
msgstr ""

#: ../../library/tkinter.rst:410
msgid ""
"This call (say, for example, creating a button widget), is implemented in "
"the :mod:`tkinter` package, which is written in Python.  This Python "
"function will parse the commands and the arguments and convert them into a "
"form that makes them look as if they had come from a Tk script instead of a "
"Python script."
msgstr ""

#: ../../library/tkinter.rst:418
msgid "_tkinter (C)"
msgstr ""

#: ../../library/tkinter.rst:417
msgid ""
"These commands and their arguments will be passed to a C function in the "
":mod:`_tkinter` - note the underscore - extension module."
msgstr ""

#: ../../library/tkinter.rst:425
msgid "Tk Widgets (C and Tcl)"
msgstr ""

#: ../../library/tkinter.rst:421
msgid ""
"This C function is able to make calls into other C modules, including the C "
"functions that make up the Tk library.  Tk is implemented in C and some Tcl."
" The Tcl part of the Tk widgets is used to bind certain default behaviors to"
" widgets, and is executed once at the point where the Python :mod:`tkinter` "
"package is imported. (The user never sees this stage)."
msgstr ""

#: ../../library/tkinter.rst:428
msgid "Tk (C)"
msgstr ""

#: ../../library/tkinter.rst:428
msgid "The Tk part of the Tk Widgets implement the final mapping to ..."
msgstr ""

#: ../../library/tkinter.rst:432
msgid "Xlib (C)"
msgstr ""

#: ../../library/tkinter.rst:431
msgid "the Xlib library to draw graphics on the screen."
msgstr ""

#: ../../library/tkinter.rst:435
msgid "Threading model"
msgstr ""

#: ../../library/tkinter.rst:437
msgid ""
"Python and Tcl/Tk have very different threading models, which :mod:`tkinter`"
" tries to bridge. If you use threads, you may need to be aware of this."
msgstr ""

#: ../../library/tkinter.rst:440
msgid ""
"A Python interpreter may have many threads associated with it. In Tcl, "
"multiple threads can be created, but each thread has a separate Tcl "
"interpreter instance associated with it. Threads can also create more than "
"one interpreter instance, though each interpreter instance can be used only "
"by the one thread that created it."
msgstr ""

#: ../../library/tkinter.rst:445
msgid ""
"Each :class:`Tk` object created by :mod:`tkinter` contains a Tcl "
"interpreter. It also keeps track of which thread created that interpreter. "
"Calls to :mod:`tkinter` can be made from any Python thread. Internally, if a"
" call comes from a thread other than the one that created the :class:`Tk` "
"object, an event is posted to the interpreter's event queue, and when "
"executed, the result is returned to the calling Python thread."
msgstr ""

#: ../../library/tkinter.rst:452
msgid ""
"Tcl/Tk applications are normally event-driven, meaning that after "
"initialization, the interpreter runs an event loop (i.e. "
":func:`Tk.mainloop`) and responds to events. Because it is single-threaded, "
"event handlers must respond quickly, otherwise they will block other events "
"from being processed. To avoid this, any long-running computations should "
"not run in an event handler, but are either broken into smaller pieces using"
" timers, or run in another thread. This is different from many GUI toolkits "
"where the GUI runs in a completely separate thread from all application code"
" including event handlers."
msgstr ""

#: ../../library/tkinter.rst:461
msgid ""
"If the Tcl interpreter is not running the event loop and processing events, "
"any :mod:`tkinter` calls made from threads other than the one running the "
"Tcl interpreter will fail."
msgstr ""

#: ../../library/tkinter.rst:465
msgid "A number of special cases exist:"
msgstr ""

#: ../../library/tkinter.rst:467
msgid ""
"Tcl/Tk libraries can be built so they are not thread-aware. In this case, "
":mod:`tkinter` calls the library from the originating Python thread, even if"
" this is different than the thread that created the Tcl interpreter. A "
"global lock ensures only one call occurs at a time."
msgstr ""

#: ../../library/tkinter.rst:472
msgid ""
"While :mod:`tkinter` allows you to create more than one instance of a "
":class:`Tk` object (with its own interpreter), all interpreters that are "
"part of the same thread share a common event queue, which gets ugly fast. In"
" practice, don't create more than one instance of :class:`Tk` at a time. "
"Otherwise, it's best to create them in separate threads and ensure you're "
"running a thread-aware Tcl/Tk build."
msgstr ""

#: ../../library/tkinter.rst:478
msgid ""
"Blocking event handlers are not the only way to prevent the Tcl interpreter "
"from reentering the event loop. It is even possible to run multiple nested "
"event loops or abandon the event loop entirely. If you're doing anything "
"tricky when it comes to events or threads, be aware of these possibilities."
msgstr ""

#: ../../library/tkinter.rst:483
msgid ""
"There are a few select :mod:`tkinter` functions that presently work only "
"when called from the thread that created the Tcl interpreter."
msgstr ""

#: ../../library/tkinter.rst:488
msgid "Handy Reference"
msgstr ""

#: ../../library/tkinter.rst:494
msgid "Setting Options"
msgstr ""

#: ../../library/tkinter.rst:496
msgid ""
"Options control things like the color and border width of a widget. Options "
"can be set in three ways:"
msgstr ""

#: ../../library/tkinter.rst:502
msgid "At object creation time, using keyword arguments"
msgstr ""

#: ../../library/tkinter.rst:508
msgid ""
"After object creation, treating the option name like a dictionary index"
msgstr ""

#: ../../library/tkinter.rst:513
msgid ""
"Use the config() method to update multiple attrs subsequent to object "
"creation"
msgstr ""

#: ../../library/tkinter.rst:515
msgid ""
"For a complete explanation of a given option and its behavior, see the Tk "
"man pages for the widget in question."
msgstr ""

#: ../../library/tkinter.rst:518
msgid ""
"Note that the man pages list \"STANDARD OPTIONS\" and \"WIDGET SPECIFIC "
"OPTIONS\" for each widget.  The former is a list of options that are common "
"to many widgets, the latter are the options that are idiosyncratic to that "
"particular widget.  The Standard Options are documented on the "
":manpage:`options(3)` man page."
msgstr ""

#: ../../library/tkinter.rst:524
msgid ""
"No distinction between standard and widget-specific options is made in this "
"document.  Some options don't apply to some kinds of widgets. Whether a "
"given widget responds to a particular option depends on the class of the "
"widget; buttons have a ``command`` option, labels do not."
msgstr ""

#: ../../library/tkinter.rst:529
msgid ""
"The options supported by a given widget are listed in that widget's man "
"page, or can be queried at runtime by calling the :meth:`config` method "
"without arguments, or by calling the :meth:`keys` method on that widget.  "
"The return value of these calls is a dictionary whose key is the name of the"
" option as a string (for example, ``'relief'``) and whose values are "
"5-tuples."
msgstr ""

#: ../../library/tkinter.rst:535
msgid ""
"Some options, like ``bg`` are synonyms for common options with long names "
"(``bg`` is shorthand for \"background\"). Passing the ``config()`` method "
"the name of a shorthand option will return a 2-tuple, not 5-tuple. The "
"2-tuple passed back will contain the name of the synonym and the \"real\" "
"option (such as ``('bg', 'background')``)."
msgstr ""

#: ../../library/tkinter.rst:542
msgid "Index"
msgstr "索引"

#: ../../library/tkinter.rst:542
msgid "Meaning"
msgstr "含意"

#: ../../library/tkinter.rst:542
msgid "Example"
msgstr "示例"

#: ../../library/tkinter.rst:544
msgid "0"
msgstr "0"

#: ../../library/tkinter.rst:544
msgid "option name"
msgstr "选项名称"

#: ../../library/tkinter.rst:544 ../../library/tkinter.rst:546
msgid "``'relief'``"
msgstr "``'relief'``"

#: ../../library/tkinter.rst:546
msgid "1"
msgstr "1"

#: ../../library/tkinter.rst:546
msgid "option name for database lookup"
msgstr "数据库查找的选项名称"

#: ../../library/tkinter.rst:548
msgid "2"
msgstr "2"

#: ../../library/tkinter.rst:548
msgid "option class for database lookup"
msgstr "数据库查找的选项类"

#: ../../library/tkinter.rst:548
msgid "``'Relief'``"
msgstr "``'Relief'``"

#: ../../library/tkinter.rst:551
msgid "3"
msgstr "3"

#: ../../library/tkinter.rst:551
msgid "default value"
msgstr "默认值"

#: ../../library/tkinter.rst:551
msgid "``'raised'``"
msgstr "``'raised'``"

#: ../../library/tkinter.rst:553
msgid "4"
msgstr "4"

#: ../../library/tkinter.rst:553
msgid "current value"
msgstr "当前值"

#: ../../library/tkinter.rst:553
msgid "``'groove'``"
msgstr "``'groove'``"

#: ../../library/tkinter.rst:556
msgid "Example::"
msgstr "示例::"

#: ../../library/tkinter.rst:561
msgid ""
"Of course, the dictionary printed will include all the options available and"
" their values.  This is meant only as an example."
msgstr ""

#: ../../library/tkinter.rst:566
msgid "The Packer"
msgstr ""

#: ../../library/tkinter.rst:570
msgid ""
"The packer is one of Tk's geometry-management mechanisms.    Geometry "
"managers are used to specify the relative positioning of widgets within "
"their container - their mutual *master*.  In contrast to the more cumbersome"
" *placer* (which is used less commonly, and we do not cover here), the "
"packer takes qualitative relationship specification - *above*, *to the left "
"of*, *filling*, etc - and works everything out to determine the exact "
"placement coordinates for you."
msgstr ""

#: ../../library/tkinter.rst:577
msgid ""
"The size of any *master* widget is determined by the size of the \"slave "
"widgets\" inside.  The packer is used to control where slave widgets appear "
"inside the master into which they are packed.  You can pack widgets into "
"frames, and frames into other frames, in order to achieve the kind of layout"
" you desire. Additionally, the arrangement is dynamically adjusted to "
"accommodate incremental changes to the configuration, once it is packed."
msgstr ""

#: ../../library/tkinter.rst:584
msgid ""
"Note that widgets do not appear until they have had their geometry specified"
" with a geometry manager.  It's a common early mistake to leave out the "
"geometry specification, and then be surprised when the widget is created but"
" nothing appears.  A widget will appear only after it has had, for example, "
"the packer's :meth:`pack` method applied to it."
msgstr ""

#: ../../library/tkinter.rst:590
msgid ""
"The pack() method can be called with keyword-option/value pairs that control"
" where the widget is to appear within its container, and how it is to behave"
" when the main application window is resized.  Here are some examples::"
msgstr ""

#: ../../library/tkinter.rst:600
msgid "Packer Options"
msgstr ""

#: ../../library/tkinter.rst:602
msgid ""
"For more extensive information on the packer and the options that it can "
"take, see the man pages and page 183 of John Ousterhout's book."
msgstr ""

#: ../../library/tkinter.rst:606 ../../library/tkinter.rst:726
msgid "anchor"
msgstr ""

#: ../../library/tkinter.rst:606
msgid ""
"Anchor type.  Denotes where the packer is to place each slave in its parcel."
msgstr ""

#: ../../library/tkinter.rst:609
msgid "expand"
msgstr "expand"

#: ../../library/tkinter.rst:609
msgid "Boolean, ``0`` or ``1``."
msgstr ""

#: ../../library/tkinter.rst:612
msgid "fill"
msgstr "fill"

#: ../../library/tkinter.rst:612
msgid "Legal values: ``'x'``, ``'y'``, ``'both'``, ``'none'``."
msgstr ""

#: ../../library/tkinter.rst:615
msgid "ipadx and ipady"
msgstr "ipadx 和 ipady"

#: ../../library/tkinter.rst:615
msgid ""
"A distance - designating internal padding on each side of the slave widget."
msgstr ""

#: ../../library/tkinter.rst:618
msgid "padx and pady"
msgstr "padx 和 pady"

#: ../../library/tkinter.rst:618
msgid ""
"A distance - designating external padding on each side of the slave widget."
msgstr ""

#: ../../library/tkinter.rst:622
msgid "side"
msgstr "side"

#: ../../library/tkinter.rst:621
msgid "Legal values are: ``'left'``, ``'right'``, ``'top'``, ``'bottom'``."
msgstr ""

#: ../../library/tkinter.rst:625
msgid "Coupling Widget Variables"
msgstr ""

#: ../../library/tkinter.rst:627
msgid ""
"The current-value setting of some widgets (like text entry widgets) can be "
"connected directly to application variables by using special options.  These"
" options are ``variable``, ``textvariable``, ``onvalue``, ``offvalue``, and "
"``value``.  This connection works both ways: if the variable changes for any"
" reason, the widget it's connected to will be updated to reflect the new "
"value."
msgstr ""

#: ../../library/tkinter.rst:633
msgid ""
"Unfortunately, in the current implementation of :mod:`tkinter` it is not "
"possible to hand over an arbitrary Python variable to a widget through a "
"``variable`` or ``textvariable`` option.  The only kinds of variables for "
"which this works are variables that are subclassed from a class called "
"Variable, defined in :mod:`tkinter`."
msgstr ""

#: ../../library/tkinter.rst:639
msgid ""
"There are many useful subclasses of Variable already defined: "
":class:`StringVar`, :class:`IntVar`, :class:`DoubleVar`, and "
":class:`BooleanVar`.  To read the current value of such a variable, call the"
" :meth:`get` method on it, and to change its value you call the :meth:`!set`"
" method.  If you follow this protocol, the widget will always track the "
"value of the variable, with no further intervention on your part."
msgstr ""

#: ../../library/tkinter.rst:679
msgid "The Window Manager"
msgstr ""

#: ../../library/tkinter.rst:683
msgid ""
"In Tk, there is a utility command, ``wm``, for interacting with the window "
"manager.  Options to the ``wm`` command allow you to control things like "
"titles, placement, icon bitmaps, and the like.  In :mod:`tkinter`, these "
"commands have been implemented as methods on the :class:`Wm` class.  "
"Toplevel widgets are subclassed from the :class:`Wm` class, and so can call "
"the :class:`Wm` methods directly."
msgstr ""

#: ../../library/tkinter.rst:690
msgid ""
"To get at the toplevel window that contains a given widget, you can often "
"just refer to the widget's master.  Of course if the widget has been packed "
"inside of a frame, the master won't represent a toplevel window.  To get at "
"the toplevel window that contains an arbitrary widget, you can call the "
":meth:`_root` method. This method begins with an underscore to denote the "
"fact that this function is part of the implementation, and not an interface "
"to Tk functionality."
msgstr ""

#: ../../library/tkinter.rst:697
msgid "Here are some examples of typical usage::"
msgstr ""

#: ../../library/tkinter.rst:720
msgid "Tk Option Data Types"
msgstr ""

#: ../../library/tkinter.rst:725
msgid ""
"Legal values are points of the compass: ``\"n\"``, ``\"ne\"``, ``\"e\"``, "
"``\"se\"``, ``\"s\"``, ``\"sw\"``, ``\"w\"``, ``\"nw\"``, and also "
"``\"center\"``."
msgstr ""

#: ../../library/tkinter.rst:732
msgid "bitmap"
msgstr "位图"

#: ../../library/tkinter.rst:729
msgid ""
"There are eight built-in, named bitmaps: ``'error'``, ``'gray25'``, "
"``'gray50'``, ``'hourglass'``, ``'info'``, ``'questhead'``, ``'question'``, "
"``'warning'``.  To specify an X bitmap filename, give the full path to the "
"file, preceded with an ``@``, as in ``\"@/usr/contrib/bitmap/gumby.bit\"``."
msgstr ""

#: ../../library/tkinter.rst:735
msgid "boolean"
msgstr ""

#: ../../library/tkinter.rst:735
msgid "You can pass integers 0 or 1 or the strings ``\"yes\"`` or ``\"no\"``."
msgstr ""

#: ../../library/tkinter.rst:742
msgid "callback"
msgstr "callback -- 回调"

#: ../../library/tkinter.rst:738
msgid "This is any Python function that takes no arguments.  For example::"
msgstr ""

#: ../../library/tkinter.rst:748
msgid "color"
msgstr ""

#: ../../library/tkinter.rst:745
msgid ""
"Colors can be given as the names of X colors in the rgb.txt file, or as "
"strings representing RGB values in 4 bit: ``\"#RGB\"``, 8 bit: "
"``\"#RRGGBB\"``, 12 bit\" ``\"#RRRGGGBBB\"``, or 16 bit "
"``\"#RRRRGGGGBBBB\"`` ranges, where R,G,B here represent any legal hex "
"digit.  See page 160 of Ousterhout's book for details."
msgstr ""

#: ../../library/tkinter.rst:754
msgid "cursor"
msgstr "光标"

#: ../../library/tkinter.rst:751
msgid ""
"The standard X cursor names from :file:`cursorfont.h` can be used, without "
"the ``XC_`` prefix.  For example to get a hand cursor (:const:`XC_hand2`), "
"use the string ``\"hand2\"``.  You can also specify a bitmap and mask file "
"of your own. See page 179 of Ousterhout's book."
msgstr ""

#: ../../library/tkinter.rst:761
msgid "distance"
msgstr ""

#: ../../library/tkinter.rst:757
msgid ""
"Screen distances can be specified in either pixels or absolute distances. "
"Pixels are given as numbers and absolute distances as strings, with the "
"trailing character denoting units: ``c`` for centimetres, ``i`` for inches, "
"``m`` for millimetres, ``p`` for printer's points.  For example, 3.5 inches "
"is expressed as ``\"3.5i\"``."
msgstr ""

#: ../../library/tkinter.rst:766
msgid "font"
msgstr ""

#: ../../library/tkinter.rst:764
msgid ""
"Tk uses a list font name format, such as ``{courier 10 bold}``. Font sizes "
"with positive numbers are measured in points; sizes with negative numbers "
"are measured in pixels."
msgstr ""

#: ../../library/tkinter.rst:771
msgid "geometry"
msgstr ""

#: ../../library/tkinter.rst:769
msgid ""
"This is a string of the form ``widthxheight``, where width and height are "
"measured in pixels for most widgets (in characters for widgets displaying "
"text). For example: ``fred[\"geometry\"] = \"200x100\"``."
msgstr ""

#: ../../library/tkinter.rst:775
msgid "justify"
msgstr ""

#: ../../library/tkinter.rst:774
msgid ""
"Legal values are the strings: ``\"left\"``, ``\"center\"``, ``\"right\"``, "
"and ``\"fill\"``."
msgstr ""

#: ../../library/tkinter.rst:780
msgid "region"
msgstr ""

#: ../../library/tkinter.rst:778
msgid ""
"This is a string with four space-delimited elements, each of which is a "
"legal distance (see above).  For example: ``\"2 3 4 5\"`` and ``\"3i 2i 4.5i"
" 2i\"`` and ``\"3c 2c 4c 10.43c\"``  are all legal regions."
msgstr ""

#: ../../library/tkinter.rst:784
msgid "relief"
msgstr ""

#: ../../library/tkinter.rst:783
msgid ""
"Determines what the border style of a widget will be.  Legal values are: "
"``\"raised\"``, ``\"sunken\"``, ``\"flat\"``, ``\"groove\"``, and "
"``\"ridge\"``."
msgstr ""

#: ../../library/tkinter.rst:788
msgid "scrollcommand"
msgstr ""

#: ../../library/tkinter.rst:787
msgid ""
"This is almost always the :meth:`!set` method of some scrollbar widget, but "
"can be any widget method that takes a single argument."
msgstr ""

#: ../../library/tkinter.rst:791
msgid "wrap"
msgstr ""

#: ../../library/tkinter.rst:791
msgid "Must be one of: ``\"none\"``, ``\"char\"``, or ``\"word\"``."
msgstr ""

#: ../../library/tkinter.rst:796
msgid "Bindings and Events"
msgstr ""

#: ../../library/tkinter.rst:802
msgid ""
"The bind method from the widget command allows you to watch for certain "
"events and to have a callback function trigger when that event type occurs."
"  The form of the bind method is::"
msgstr ""

#: ../../library/tkinter.rst:808
msgid "where:"
msgstr ""

#: ../../library/tkinter.rst:812
msgid "sequence"
msgstr "sequence -- 序列"

#: ../../library/tkinter.rst:811
msgid ""
"is a string that denotes the target kind of event.  (See the bind man page "
"and page 201 of John Ousterhout's book for details)."
msgstr ""

#: ../../library/tkinter.rst:817
msgid "func"
msgstr "func"

#: ../../library/tkinter.rst:815
msgid ""
"is a Python function, taking one argument, to be invoked when the event "
"occurs. An Event instance will be passed as the argument. (Functions "
"deployed this way are commonly known as *callbacks*.)"
msgstr ""

#: ../../library/tkinter.rst:823
msgid "add"
msgstr ""

#: ../../library/tkinter.rst:820
msgid ""
"is optional, either ``''`` or ``'+'``.  Passing an empty string denotes that"
" this binding is to replace any other bindings that this event is associated"
" with.  Passing a ``'+'`` means that this function is to be added to the "
"list of functions bound to this event type."
msgstr ""

#: ../../library/tkinter.rst:832
msgid ""
"Notice how the widget field of the event is being accessed in the "
"``turn_red()`` callback.  This field contains the widget that caught the X "
"event.  The following table lists the other event fields you can access, and"
" how they are denoted in Tk, which can be useful when referring to the Tk "
"man pages."
msgstr ""

#: ../../library/tkinter.rst:838 ../../library/tkinter.rst:838
msgid "Tkinter Event Field"
msgstr ""

#: ../../library/tkinter.rst:840
msgid "%f"
msgstr "%f"

#: ../../library/tkinter.rst:840
msgid "focus"
msgstr "焦点"

#: ../../library/tkinter.rst:840
msgid "%A"
msgstr "%A"

#: ../../library/tkinter.rst:840
msgid "char"
msgstr ""

#: ../../library/tkinter.rst:842
msgid "%h"
msgstr "%h"

#: ../../library/tkinter.rst:842
msgid "height"
msgstr ""

#: ../../library/tkinter.rst:842
msgid "%E"
msgstr "%E"

#: ../../library/tkinter.rst:842
msgid "send_event"
msgstr ""

#: ../../library/tkinter.rst:844
msgid "%k"
msgstr "%k"

#: ../../library/tkinter.rst:844
msgid "keycode"
msgstr ""

#: ../../library/tkinter.rst:844
msgid "%K"
msgstr "%K"

#: ../../library/tkinter.rst:844
msgid "keysym"
msgstr ""

#: ../../library/tkinter.rst:846
msgid "%s"
msgstr "%s"

#: ../../library/tkinter.rst:846
msgid "state"
msgstr "状况"

#: ../../library/tkinter.rst:846
msgid "%N"
msgstr "%N"

#: ../../library/tkinter.rst:846
msgid "keysym_num"
msgstr ""

#: ../../library/tkinter.rst:848
msgid "%t"
msgstr "%t"

#: ../../library/tkinter.rst:848
msgid "time"
msgstr "time"

#: ../../library/tkinter.rst:848
msgid "%T"
msgstr "%T"

#: ../../library/tkinter.rst:848
msgid "type"
msgstr "type -- 类型"

#: ../../library/tkinter.rst:850
msgid "%w"
msgstr "%w"

#: ../../library/tkinter.rst:850
msgid "width"
msgstr "宽度"

#: ../../library/tkinter.rst:850
msgid "%W"
msgstr "%W"

#: ../../library/tkinter.rst:850
msgid "widget"
msgstr ""

#: ../../library/tkinter.rst:852
msgid "%x"
msgstr "%x"

#: ../../library/tkinter.rst:852
msgid "x"
msgstr ""

#: ../../library/tkinter.rst:852
msgid "%X"
msgstr "%X"

#: ../../library/tkinter.rst:852
msgid "x_root"
msgstr ""

#: ../../library/tkinter.rst:854
msgid "%y"
msgstr "%y"

#: ../../library/tkinter.rst:854
msgid "y"
msgstr ""

#: ../../library/tkinter.rst:854
msgid "%Y"
msgstr "%Y"

#: ../../library/tkinter.rst:854
msgid "y_root"
msgstr ""

#: ../../library/tkinter.rst:859
msgid "The index Parameter"
msgstr ""

#: ../../library/tkinter.rst:861
msgid ""
"A number of widgets require \"index\" parameters to be passed.  These are "
"used to point at a specific place in a Text widget, or to particular "
"characters in an Entry widget, or to particular menu items in a Menu widget."
msgstr ""

#: ../../library/tkinter.rst:868
msgid "Entry widget indexes (index, view index, etc.)"
msgstr ""

#: ../../library/tkinter.rst:866
msgid ""
"Entry widgets have options that refer to character positions in the text "
"being displayed.  You can use these :mod:`tkinter` functions to access these"
" special points in text widgets:"
msgstr ""

#: ../../library/tkinter.rst:872
msgid "Text widget indexes"
msgstr ""

#: ../../library/tkinter.rst:871
msgid ""
"The index notation for Text widgets is very rich and is best described in "
"the Tk man pages."
msgstr ""

#: ../../library/tkinter.rst:897
msgid "Menu indexes (menu.invoke(), menu.entryconfig(), etc.)"
msgstr ""

#: ../../library/tkinter.rst:875
msgid ""
"Some options and methods for menus manipulate specific menu entries. Anytime"
" a menu index is needed for an option or a parameter, you may pass in:"
msgstr ""

#: ../../library/tkinter.rst:878
msgid ""
"an integer which refers to the numeric position of the entry in the widget, "
"counted from the top, starting with 0;"
msgstr ""

#: ../../library/tkinter.rst:881
msgid ""
"the string ``\"active\"``, which refers to the menu position that is "
"currently under the cursor;"
msgstr ""

#: ../../library/tkinter.rst:884
msgid "the string ``\"last\"`` which refers to the last menu item;"
msgstr ""

#: ../../library/tkinter.rst:886
msgid ""
"An integer preceded by ``@``, as in ``@6``, where the integer is interpreted"
" as a y pixel coordinate in the menu's coordinate system;"
msgstr ""

#: ../../library/tkinter.rst:889
msgid ""
"the string ``\"none\"``, which indicates no menu entry at all, most often "
"used with menu.activate() to deactivate all entries, and finally,"
msgstr ""

#: ../../library/tkinter.rst:892
msgid ""
"a text string that is pattern matched against the label of the menu entry, "
"as scanned from the top of the menu to the bottom.  Note that this index "
"type is considered after all the others, which means that matches for menu "
"items labelled ``last``, ``active``, or ``none`` may be interpreted as the "
"above literals, instead."
msgstr ""

#: ../../library/tkinter.rst:900
msgid "Images"
msgstr ""

#: ../../library/tkinter.rst:902
msgid ""
"Images of different formats can be created through the corresponding "
"subclass of :class:`tkinter.Image`:"
msgstr ""

#: ../../library/tkinter.rst:905
msgid ":class:`BitmapImage` for images in XBM format."
msgstr ""

#: ../../library/tkinter.rst:907
msgid ""
":class:`PhotoImage` for images in PGM, PPM, GIF and PNG formats. The latter "
"is supported starting with Tk 8.6."
msgstr ""

#: ../../library/tkinter.rst:910
msgid ""
"Either type of image is created through either the ``file`` or the ``data`` "
"option (other options are available as well)."
msgstr ""

#: ../../library/tkinter.rst:913
msgid ""
"The image object can then be used wherever an ``image`` option is supported "
"by some widget (e.g. labels, buttons, menus). In these cases, Tk will not "
"keep a reference to the image. When the last Python reference to the image "
"object is deleted, the image data is deleted as well, and Tk will display an"
" empty box wherever the image was used."
msgstr ""

#: ../../library/tkinter.rst:921
msgid ""
"The `Pillow <http://python-pillow.org/>`_ package adds support for formats "
"such as BMP, JPEG, TIFF, and WebP, among others."
msgstr ""

#: ../../library/tkinter.rst:927
msgid "File Handlers"
msgstr ""

#: ../../library/tkinter.rst:929
msgid ""
"Tk allows you to register and unregister a callback function which will be "
"called from the Tk mainloop when I/O is possible on a file descriptor. Only "
"one handler may be registered per file descriptor. Example code::"
msgstr ""

#: ../../library/tkinter.rst:940
msgid "This feature is not available on Windows."
msgstr ""

#: ../../library/tkinter.rst:942
msgid ""
"Since you don't know how many bytes are available for reading, you may not "
"want to use the :class:`~io.BufferedIOBase` or :class:`~io.TextIOBase` "
":meth:`~io.BufferedIOBase.read` or :meth:`~io.IOBase.readline` methods, "
"since these will insist on reading a predefined number of bytes. For "
"sockets, the :meth:`~socket.socket.recv` or :meth:`~socket.socket.recvfrom` "
"methods will work fine; for other files, use raw reads or "
"``os.read(file.fileno(), maxbytecount)``."
msgstr ""

#: ../../library/tkinter.rst:953
msgid ""
"Registers the file handler callback function *func*. The *file* argument may"
" either be an object with a :meth:`~io.IOBase.fileno` method (such as a file"
" or socket object), or an integer file descriptor. The *mask* argument is an"
" ORed combination of any of the three constants below. The callback is "
"called as follows::"
msgstr ""

#: ../../library/tkinter.rst:964
msgid "Unregisters a file handler."
msgstr ""

#: ../../library/tkinter.rst:971
msgid "Constants used in the *mask* arguments."
msgstr ""
