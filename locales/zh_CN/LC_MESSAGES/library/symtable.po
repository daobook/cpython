# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
# Translators:
# jaystone776 <1732865113@qq.com>, 2021
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-23 10:34+0800\n"
"PO-Revision-Date: 2021-06-28 01:14+0000\n"
"Last-Translator: jaystone776 <1732865113@qq.com>, 2021\n"
"Language: zh_CN\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-"
"doc/teams/5390/zh_CN/)\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../library/symtable.rst:2
msgid ":mod:`symtable` --- Access to the compiler's symbol tables"
msgstr ":mod:`symtable` --- 访问编译器的符号表"

#: ../../library/symtable.rst:7
msgid "**Source code:** :source:`Lib/symtable.py`"
msgstr "**源码**：:source:`Lib/symtable.py`"

#: ../../library/symtable.rst:15
msgid ""
"Symbol tables are generated by the compiler from AST just before bytecode"
" is generated.  The symbol table is responsible for calculating the scope"
" of every identifier in the code.  :mod:`symtable` provides an interface "
"to examine these tables."
msgstr "符号表是由编译器在生成字节码之前从 AST 生成的。符号表负责计算代码中每个标识符的范围。:mod:`symtable` 提供一个接口来检查这些表。"

#: ../../library/symtable.rst:22
msgid "Generating Symbol Tables"
msgstr "生成符号表"

#: ../../library/symtable.rst:26
msgid ""
"Return the toplevel :class:`SymbolTable` for the Python source *code*. "
"*filename* is the name of the file containing the code.  *compile_type* "
"is like the *mode* argument to :func:`compile`."
msgstr ""
"返回 Python 源码的顶层 :class:`SymbolTable`。*filename* "
"是包含代码的文件的名称。*compile_type* 就像 :func:`compile` 的 *mode* 参数。"

#: ../../library/symtable.rst:32
msgid "Examining Symbol Tables"
msgstr "审查符号表"

#: ../../library/symtable.rst:36
msgid "A namespace table for a block.  The constructor is not public."
msgstr "一个区块的命名空间表。构造函数是不公开的。"

#: ../../library/symtable.rst:40
msgid ""
"Return the type of the symbol table.  Possible values are ``'class'``, "
"``'module'``, and ``'function'``."
msgstr "返回符号表的类型。可能的值是 ``'class'``、``'module'`` 和 ``'function'``。"

#: ../../library/symtable.rst:45
msgid "Return the table's identifier."
msgstr "返回该表的标识符。"

#: ../../library/symtable.rst:49
msgid ""
"Return the table's name.  This is the name of the class if the table is "
"for a class, the name of the function if the table is for a function, or "
"``'top'`` if the table is global (:meth:`get_type` returns ``'module'``)."
msgstr ""
"返回表的名称。如果该表是为一个类准备的，这就是类的名称；如果该表是为一个函数准备的，这就是函数的名称；如果该表是全局的，这就是 ``'top'``"
"  （:meth:`get_type` 返回 ``'module'``）。"

#: ../../library/symtable.rst:55
msgid "Return the number of the first line in the block this table represents."
msgstr "返回该表所代表的区块中第一行的编号。"

#: ../../library/symtable.rst:59
msgid "Return ``True`` if the locals in this table can be optimized."
msgstr "如果此表中的 locals 可以被优化，返回 ``True``。"

#: ../../library/symtable.rst:63
msgid "Return ``True`` if the block is a nested class or function."
msgstr "如果该块是一个嵌套的类或函数，则返回 ``True``。"

#: ../../library/symtable.rst:67
msgid ""
"Return ``True`` if the block has nested namespaces within it.  These can "
"be obtained with :meth:`get_children`."
msgstr "如果该区块内有嵌套的命名空间，返回 ``True``。这些可以通过 :meth:`get_children` 来获得。"

#: ../../library/symtable.rst:72
msgid ""
"Return a view object containing the names of symbols in the table. See "
"the :ref:`documentation of view objects <dict-views>`."
msgstr ""

#: ../../library/symtable.rst:77
msgid "Lookup *name* in the table and return a :class:`Symbol` instance."
msgstr "在表中查找 *name* 并返回一个 :class:`Symbol` 实例。"

#: ../../library/symtable.rst:81
msgid "Return a list of :class:`Symbol` instances for names in the table."
msgstr "返回表中名称的 :class:`Symbol` 实例的列表。"

#: ../../library/symtable.rst:85
msgid "Return a list of the nested symbol tables."
msgstr "返回一个嵌套符号表的列表。"

#: ../../library/symtable.rst:90
msgid ""
"A namespace for a function or method.  This class inherits "
":class:`SymbolTable`."
msgstr "一个函数或方法的命名空间。该类继承于 :class:`SymbolTable`。"

#: ../../library/symtable.rst:95
msgid "Return a tuple containing names of parameters to this function."
msgstr "返回一个包含该函数参数名称的元组。"

#: ../../library/symtable.rst:99
msgid "Return a tuple containing names of locals in this function."
msgstr "返回一个包含本函数中 locals 名称的元组。"

#: ../../library/symtable.rst:103
msgid "Return a tuple containing names of globals in this function."
msgstr "返回一个包含此函数中 globals 名称的元组。"

#: ../../library/symtable.rst:107
msgid "Return a tuple containing names of nonlocals in this function."
msgstr "返回一个包含本函数中的 nonlocals 名称的元组。"

#: ../../library/symtable.rst:111
msgid "Return a tuple containing names of free variables in this function."
msgstr "返回一个包含本函数中自由变量名称的元组。"

#: ../../library/symtable.rst:116
msgid "A namespace of a class.  This class inherits :class:`SymbolTable`."
msgstr "一个类的命名空间。该类继承于 :class:`SymbolTable`。"

#: ../../library/symtable.rst:120
msgid "Return a tuple containing the names of methods declared in the class."
msgstr "返回一个包含在该类中声明的方法名称的元组。"

#: ../../library/symtable.rst:125
msgid ""
"An entry in a :class:`SymbolTable` corresponding to an identifier in the "
"source.  The constructor is not public."
msgstr ":class:`SymbolTable` 中的一个条目，对应于源中的一个标识符。该构造函数不是公开的。"

#: ../../library/symtable.rst:130
msgid "Return the symbol's name."
msgstr ""

#: ../../library/symtable.rst:134
msgid "Return ``True`` if the symbol is used in its block."
msgstr ""

#: ../../library/symtable.rst:138
msgid "Return ``True`` if the symbol is created from an import statement."
msgstr ""

#: ../../library/symtable.rst:142
msgid "Return ``True`` if the symbol is a parameter."
msgstr ""

#: ../../library/symtable.rst:146
msgid "Return ``True`` if the symbol is global."
msgstr ""

#: ../../library/symtable.rst:150
msgid "Return ``True`` if the symbol is nonlocal."
msgstr ""

#: ../../library/symtable.rst:154
msgid "Return ``True`` if the symbol is declared global with a global statement."
msgstr ""

#: ../../library/symtable.rst:158
msgid "Return ``True`` if the symbol is local to its block."
msgstr ""

#: ../../library/symtable.rst:162
msgid "Return ``True`` if the symbol is annotated."
msgstr ""

#: ../../library/symtable.rst:168
msgid ""
"Return ``True`` if the symbol is referenced in its block, but not "
"assigned to."
msgstr ""

#: ../../library/symtable.rst:173
msgid "Return ``True`` if the symbol is assigned to in its block."
msgstr ""

#: ../../library/symtable.rst:177
msgid "Return ``True`` if name binding introduces new namespace."
msgstr ""

#: ../../library/symtable.rst:179
msgid ""
"If the name is used as the target of a function or class statement, this "
"will be true."
msgstr ""

#: ../../library/symtable.rst:182
msgid "For example::"
msgstr "例如："

#: ../../library/symtable.rst:188
msgid ""
"Note that a single name can be bound to multiple objects.  If the result "
"is ``True``, the name may also be bound to other objects, like an int or "
"list, that does not introduce a new namespace."
msgstr ""

#: ../../library/symtable.rst:194
msgid "Return a list of namespaces bound to this name."
msgstr ""

#: ../../library/symtable.rst:198
msgid ""
"Return the namespace bound to this name. If more than one or no namespace"
" is bound to this name, a :exc:`ValueError` is raised."
msgstr ""

#~ msgid "Return a list of names of symbols in this table."
#~ msgstr "返回本表中符号的名称列表。"

